{"version":3,"sources":["components/checkbox/Checkbox.module.scss","components/tree-item/TreeItem.module.scss","components/expand-icon/ExpandIcon.module.scss","components/loading/loading.module.scss","components/App.module.scss","components/tree-list/TreeList.module.scss","services/services.js","components/tree-list/TreeList.jsx","components/expand-icon/ExpandIcon.jsx","components/tree-item/TreeItem.jsx","components/checkbox/Checkbox.jsx","helpers/helpers.js","constants/constants.js","components/checkbox-tree/ChecboxTree.jsx","components/loading/loading.jsx","components/App.js","index.js"],"names":["module","exports","a","fetch","response","json","data","getfromApi","TreeList","children","titleId","className","styles","list","role","aria-labelledby","ExpandIcon","isExpanded","container","expanded","icon","focusable","viewBox","aria-hidden","d","TreeItem","label","onExpand","itemId","hasChildren","Array","isArray","length","Boolean","ref","React","createRef","item","type","aria-expanded","onClick","id","current","scrollIntoView","behavior","block","hidden","group","Checkbox","textLabel","indeterminate","rest","inputref","useRef","useEffect","setIndeterminateProps","checkbox","box","checkmark","fill","htmlFor","nodeHasChildren","node","Object","entries","flattenObj","nodes","flat","values","reduce","acc","nodeStateSerialized","nodeState","key","keys","forEach","value","push","states","CheckboxList","checked","onCheck","newFlatten","flatten","isParent","newValues","isLastChildren","update","assign","flattenWithNewProps","useState","setNodeState","props","prop","persistData","getStatusChecked","nodeRef","every","checkState","isAllChildChecked","some","isSomeChildChecked","handleCheck","target","nodeReference","toggleAllCheckboxes","handleExpand","toggleNode","isChecked","toggleState","statusCopy","renderTreeItem","map","name","nodeStateRef","nodeChildren","onChange","Loading","x","y","loading","attributeName","attributeType","dur","from","to","repeatCount","App","setData","JSON","parse","localStorage","getItem","state","setState","handleResponseData","setItem","stringify","app","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4aa92355.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Checkbox_container__1RDyc\",\"checkbox\":\"Checkbox_checkbox__2tu9z\",\"box\":\"Checkbox_box__1-anU\",\"native-checkbox\":\"Checkbox_native-checkbox__sWKN2\",\"checkmark__path\":\"Checkbox_checkmark__path__2LIvZ\",\"checkmark-indeterminate\":\"Checkbox_checkmark-indeterminate__3MG3e\",\"checkmark\":\"Checkbox_checkmark__xdymW\",\"label\":\"Checkbox_label__2o7Hw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"TreeItem_item__1ko5y\",\"label-component\":\"TreeItem_label-component__5qHv0\",\"label-content\":\"TreeItem_label-content__1hvkt\",\"group\":\"TreeItem_group__1nMoT\",\"expand-button\":\"TreeItem_expand-button__1Y8vE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"icon\":\"ExpandIcon_icon__LfI0B\",\"container\":\"ExpandIcon_container__1zQXP\",\"expanded\":\"ExpandIcon_expanded__27Csg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading\":\"loading_loading__2gYS8\",\"fill\":\"loading_fill__5VS9H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__2at_H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"TreeList_list__1vuJn\"};","async function getfromApi() {\n  const response = await fetch('/api/data.json')\n  const data = await response.json()\n  return data\n}\n\nexport default getfromApi\n","import React from 'react'\nimport styles from './TreeList.module.scss'\n\nfunction TreeList({ children, titleId }) {\n  return (\n    <ol className={styles.list} role=\"tree\" aria-labelledby={titleId}>\n      {children}\n    </ol>\n  )\n}\n\nexport default TreeList\n","import React from 'react'\nimport styles from './ExpandIcon.module.scss'\n\nfunction ExpandIcon({ isExpanded }) {\n  return (\n    <span\n      className={`${styles.container} ${isExpanded ? styles.expanded : ''}`}\n    >\n      <svg\n        className={`${styles.icon}`}\n        focusable=\"false\"\n        viewBox=\"0 0 24 24\"\n        aria-hidden=\"true\"\n      >\n        <path d=\"M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z\"></path>\n      </svg>\n    </span>\n  )\n}\n\nexport default ExpandIcon\n","import React from 'react'\nimport styles from './TreeItem.module.scss'\nimport ExpandIcon from '../expand-icon/ExpandIcon'\n\nfunction TreeItem({\n  children,\n  label,\n  onExpand = () => {},\n  expanded = false,\n  itemId,\n}) {\n  const hasChildren = Array.isArray(children)\n    ? children.length > 0\n    : Boolean(children)\n\n  const ref = React.createRef()\n\n  const handleExpand = () => {\n    onExpand({ id: itemId, expanded: !expanded })\n    if (ref.current) {\n      ref.current.scrollIntoView({\n        behavior: 'smooth',\n        block: 'start',\n      })\n    }\n  }\n\n  return (\n    <li role=\"treeitem\" className={styles.item} ref={ref}>\n      <div className={styles['label-component']}>\n        {hasChildren && (\n          <button\n            type=\"button\"\n            aria-expanded={expanded}\n            aria-labelledby=\"expand-label\"\n            className={styles['expand-button']}\n            onClick={handleExpand}\n          >\n            <ExpandIcon isExpanded={expanded} />\n            <span id=\"expand-label\" hidden>\n              Mais opções\n            </span>\n          </button>\n        )}\n        {label}\n      </div>\n      {expanded && (\n        <ul role=\"group\" className={styles.group}>\n          {children}\n        </ul>\n      )}\n    </li>\n  )\n}\n\nexport default TreeItem\n","import React from 'react'\nimport styles from './Checkbox.module.scss'\nimport { useRef, useEffect } from 'react'\n\nfunction Checkbox({ id, textLabel, indeterminate = false, ...rest }) {\n  const inputref = useRef(null)\n\n  useEffect(() => {\n    setIndeterminateProps()\n  })\n\n  const setIndeterminateProps = () => {\n    inputref.current.indeterminate = indeterminate\n  }\n\n  return (\n    <div className={`${styles.container}`}>\n      <div className={`${styles.checkbox}`}>\n        <input\n          ref={inputref}\n          type=\"checkbox\"\n          className={styles['native-checkbox']}\n          id={id}\n          {...rest}\n        />\n        <div className={styles.box}>\n          <svg className={styles.checkmark} viewBox=\"0 0 24 24\">\n            <path\n              fill=\"none\"\n              d=\"M1.73,12.91 8.1,19.28 22.79,4.59\"\n              className={styles['checkmark__path']}\n            ></path>\n          </svg>\n          <span className={styles['checkmark-indeterminate']}></span>\n        </div>\n      </div>\n      <label className={styles.label} htmlFor={id}>\n        {textLabel}\n      </label>\n    </div>\n  )\n}\n\nexport default Checkbox\n","function nodeHasChildren(node) {\n  return Object.entries(node.children).length > 0\n}\n\nfunction flattenObj(nodes, parent = {}) {\n  if (Object.entries(nodes).length === 0) {\n    return\n  }\n\n  const flat = Object.values(nodes).reduce((acc, node) => {\n    if (nodeHasChildren(node)) {\n      const children = flattenObj(node.children, node)\n      acc = { ...acc, ...children }\n    }\n    // prettier-ignore\n    return ((acc[node.id] = node), acc)\n  }, {})\n  return flat\n}\n\nfunction flattenWithNewProps(flatten) {\n  let list = []\n\n  Object.values(flatten).forEach((node) => {\n    const isParent = nodeHasChildren(node)\n    const newValues = {\n      isParent,\n      isLastChildren: !isParent,\n    }\n\n    const update = Object.assign(node, newValues)\n    list.push(update)\n  })\n\n  return flattenObj(list)\n}\n\nconst persistData = (nodeState, { ...props }) => {\n  Object.keys(props).forEach((prop) => {\n    props[prop].forEach((id) => {\n      if (Boolean(nodeState[id][prop])) {\n        return\n      }\n      nodeState[id][prop] = true\n    })\n  })\n}\n\nconst nodeStateSerialized = (nodeState, key) => {\n  const list = []\n  Object.keys(nodeState).forEach((value) => {\n    if (nodeState[value][key]) {\n      list.push(value)\n    }\n  })\n\n  return list\n}\n\nexport {\n  nodeHasChildren,\n  flattenWithNewProps,\n  flattenObj,\n  persistData,\n  nodeStateSerialized,\n}\n","export const persistData = 'tree-persist'\n\nexport const states = {\n  checked: 1,\n  indeterminate: 2,\n}\n\nexport const mockData = {\n  0: {\n    id: 'e0d52ca9-4b39-42c2-8b2b-bbb8efa2e78d',\n    name: 'Paul Adrien Maurice Sir Arthur',\n    children: {\n      0: {\n        id: '4de37406-3f6b-4766-a8ca-cce5e144204d',\n        name: 'John Cowdery William',\n        children: {},\n        level: 1,\n      },\n      1: {\n        id: '7e87957b-cec2-41f4-923f-6ea7b311747a',\n        name: 'Eric A. John',\n        children: {\n          0: {\n            id: 'fc4a6f3f-60f0-4f8a-8e15-a80a01357c08',\n            name: 'Wolfgang F. Duncan M.',\n            children: {},\n            level: 2,\n          },\n        },\n        level: 1,\n      },\n      2: {\n        id: 'aa46adbb-49c7-43f8-baa6-dfe86e7fb00d',\n        name: 'Otto Paul Hermann Aristide',\n        children: {},\n        level: 1,\n      },\n      3: {\n        id: '8a67a39d-612c-4048-abbf-d58b90846c2f',\n        name: 'Paul Hermann Hans',\n        children: {},\n        level: 1,\n      },\n      4: {\n        id: '5e94f212-9239-4b45-b729-8ec960947edd',\n        name: 'Frederik Willem Thomas R.',\n        children: {},\n        level: 1,\n      },\n    },\n    level: 0,\n  },\n  1: {\n    id: '3eb03733-4b0a-4aa0-9423-d833505c9a46',\n    name: 'René Hans Adolf',\n    children: {\n      0: {\n        id: 'a292a72b-fec4-4991-b942-c98b8a126816',\n        name: 'Victor Robert',\n        children: {},\n        level: 1,\n      },\n      1: {\n        id: '658d6f61-98fb-4d93-81c7-9e793724d49a',\n        name: 'Joseph Samuel',\n        children: {},\n        level: 1,\n      },\n      2: {\n        id: 'a4f6dcf0-ad3a-4e2c-a47f-ef88986acdfb',\n        name: 'Willy Orhan',\n        children: {},\n        level: 1,\n      },\n    },\n    level: 0,\n  },\n  2: {\n    id: '0425145511111144',\n    name: 'Fulano Bar',\n    children: {},\n    level: 0,\n  },\n}\n","import React, { useState } from 'react'\nimport TreeList from '../tree-list/TreeList'\nimport TreeItem from '../tree-item/TreeItem'\nimport Checkbox from '../checkbox/Checkbox'\nimport {\n  flattenObj,\n  flattenWithNewProps,\n  persistData,\n  nodeStateSerialized,\n} from '../../helpers/helpers'\nimport { states } from '../../constants/constants'\n\nfunction CheckboxList({\n  data,\n  checked,\n  expanded,\n  onCheck = () => {},\n  onExpand = () => {},\n}) {\n  // Armazenando um flat objeto para não causar mudanças\n  // custosas de recursividade no estado do React\n  const flatten = flattenObj(data)\n  const newFlatten = flattenWithNewProps(flatten)\n\n  const [nodeState, setNodeState] = useState(newFlatten || {})\n\n  persistData(nodeState, { checked, expanded })\n\n  const isAllChildChecked = (node) => {\n    return Object.values(node.children).every((children) => {\n      return nodeState[children.id].checkState === states.checked\n    })\n  }\n\n  const isSomeChildChecked = (node) => {\n    return Object.values(node.children).some(\n      (children) => nodeState[children.id].checkState > 0\n    )\n  }\n\n  const getStatusChecked = (node) => {\n    const nodeRef = nodeState[node.id]\n    if (!nodeRef.isParent) {\n      const status = nodeRef.checked ? states.checked : 0\n      return status\n    }\n\n    if (isAllChildChecked(node)) {\n      return states.checked\n    }\n\n    if (isSomeChildChecked(node)) {\n      return states.indeterminate\n    }\n  }\n\n  const handleCheck = ({ target }) => {\n    const nodeReference = { id: target.id, checked: target.checked }\n    const node = nodeState[nodeReference.id]\n\n    toggleAllCheckboxes(node, nodeReference.checked)\n    onCheck(nodeStateSerialized(nodeState, 'checked'))\n  }\n\n  const handleExpand = (nodeReference) => {\n    toggleNode(nodeReference, 'expanded', nodeReference.expanded)\n    onExpand(nodeStateSerialized(nodeState, 'expanded'))\n  }\n\n  const toggleAllCheckboxes = (node, isChecked) => {\n    const nodeRef = nodeState[node.id]\n\n    if (nodeRef.isLastChildren) {\n      toggleNode(node, 'checked', isChecked)\n    } else {\n      for (const ref in nodeRef.children) {\n        toggleAllCheckboxes(nodeRef.children[ref], isChecked)\n      }\n    }\n  }\n\n  const toggleNode = (node, key, toggleState) => {\n    const statusCopy = Object.assign({}, nodeState)\n    statusCopy[node.id][key] = toggleState\n    setNodeState(statusCopy)\n  }\n\n  const renderTreeItem = (nodes) => {\n    return Object.values(nodes).map((node) => {\n      const { name, id } = node\n      const nodeStateRef = nodeState[node.id]\n      const nodeChildren = nodeStateRef.isParent\n        ? renderTreeItem(node.children)\n        : null\n      nodeStateRef.checkState = getStatusChecked(node)\n\n      return (\n        <TreeItem\n          key={id}\n          onExpand={handleExpand}\n          itemId={id}\n          label={\n            <Checkbox\n              id={id}\n              textLabel={name}\n              checked={nodeStateRef.checkState === states.checked}\n              indeterminate={nodeStateRef.checkState === states.indeterminate}\n              onChange={handleCheck}\n            />\n          }\n          expanded={nodeStateRef.expanded}\n        >\n          {nodeChildren}\n        </TreeItem>\n      )\n    })\n  }\n\n  return <TreeList titleId=\"title-names\">{renderTreeItem(data)}</TreeList>\n}\n\nexport default CheckboxList\n","import React from 'react'\nimport styles from './loading.module.scss'\n\nfunction Loading() {\n  return (\n    <svg x=\"0px\" y=\"0px\" viewBox=\"0 0 100 100\" className={styles.loading}>\n      <title>Carregando...</title>\n      <path\n        className={styles.fill}\n        d=\"M73,50c0-12.7-10.3-23-23-23S27,37.3,27,50 M30.9,50c0-10.5,8.5-19.1,19.1-19.1S69.1,39.5,69.1,50\"\n      >\n        <animateTransform\n          attributeName=\"transform\"\n          attributeType=\"XML\"\n          type=\"rotate\"\n          dur=\"1s\"\n          from=\"0 50 50\"\n          to=\"360 50 50\"\n          repeatCount=\"indefinite\"\n        ></animateTransform>\n      </path>\n    </svg>\n  )\n}\n\nexport default Loading\n","import React from 'react'\nimport styles from './App.module.scss'\nimport { useState } from 'react'\nimport { useEffect } from 'react'\nimport getfromApi from '../services/services'\nimport CheckboxList from './checkbox-tree/ChecboxTree'\nimport { persistData } from '../constants/constants'\nimport Loading from './loading/loading'\n\nfunction App() {\n  const [data, setData] = useState({})\n  const [state, setState] = useState(\n    () =>\n      JSON.parse(localStorage.getItem(persistData)) || {\n        checked: [],\n        expanded: [],\n      }\n  )\n\n  useEffect(() => {\n    const handleResponseData = async () => {\n      const response = await getfromApi()\n      setData(response)\n    }\n    handleResponseData()\n  }, [])\n\n  useEffect(() => {\n    localStorage.setItem(persistData, JSON.stringify(state))\n  }, [state])\n\n  const onCheck = (checked) => {\n    setState({ ...state, checked })\n  }\n\n  const onExpand = (expanded) => {\n    setState({ ...state, expanded })\n  }\n\n  return (\n    <div className={styles.app}>\n      <h1 id=\"title-names\">Nomes preferidos:</h1>\n      {Object.values(data).length > 0 ? (\n        <CheckboxList\n          data={data}\n          expanded={state.expanded}\n          checked={state.checked}\n          onCheck={onCheck}\n          onExpand={onExpand}\n        />\n      ) : (\n        <Loading />\n      )}\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.scss'\nimport App from './components/App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}